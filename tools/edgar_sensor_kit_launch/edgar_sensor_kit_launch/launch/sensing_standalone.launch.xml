<launch>
  <arg name="use_sim_time" default="false" description="use_sim_time"/>

  <arg name="sensor_model" default="edgar_sensor_kit" description="sensor model name"/>
  <arg name="vehicle_model" default="edgar_vehicle" description="vehicle model name"/>

  <arg name="vehicle_mirror_param_file" default="$(find-pkg-share $(var vehicle_model)_description)/config/mirror.param.yaml" description="path to the file of vehicle mirror position yaml"/>
  <arg name="use_pointcloud_container" default="false" description="launch pointcloud container"/>
  <arg name="pointcloud_container_name" default="pointcloud_container"/>

  <let name="sensor_launch_pkg" value="$(find-pkg-share $(var sensor_model)_launch)"/>

  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="$(var vehicle_model)"/>
    </include>
  </group>

  <group>
    <push-ros-namespace namespace="sensing"/>

    <!-- Driver -->
    <include file="$(var sensor_launch_pkg)/launch/sensing.launch.xml">
      <arg name="vehicle_mirror_param_file" value="$(var vehicle_mirror_param_file)"/>
      <arg name="use_pointcloud_container" value="$(var use_pointcloud_container)"/>
      <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>
  <group if="$(var use_pointcloud_container)">
    <include file="$(find-pkg-share autoware_launch)/launch/pointcloud_container.launch.py">
      <arg name="use_multithread" value="true"/>
      <arg name="container_name" value="$(var pointcloud_container_name)"/>
    </include>
  </group>

  <group>
    <node pkg="rviz2" exec="rviz2" name="rviz2" output="screen"/>
  </group>
</launch>